import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils.executor import start_webhook
from flask import Flask, request

# üîë –¢–æ–∫–µ–Ω –≤—ñ–¥ BotFather
API_TOKEN = "8065465326:AAEV8aYGEEgDyWZwPZikBJIwl7LkB99TU5I"

# üì° –î–∞–Ω—ñ –¥–ª—è webhook
WEBHOOK_HOST = "https://dashboard.render.com/web/srv-d3bpkvt6ubrc73e9tu8g/events"  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π –¥–æ–º–µ–Ω Render
WEBHOOK_PATH = f"/webhook/{API_TOKEN}"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞
WEBAPP_HOST = "0.0.0.0"
WEBAPP_PORT = int(os.getenv("PORT", 8080))

# —Å–ø–∏—Å–æ–∫ –∞–π–¥—ñ –∞–¥–º—ñ–Ω—ñ–≤
ADMINS = [7618560125]

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# —Ç—É—Ç –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è
homework_text = "–î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è —â–µ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ‚ùå"

# —Å–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
banned_users = set()


# ---------------------------
# –§—ñ–ª—å—Ç—Ä: —ñ–≥–Ω–æ—Ä –∑–∞–±–∞–Ω–µ–Ω–∏—Ö
# ---------------------------
@dp.message_handler(lambda message: message.from_user.id in banned_users)
async def block_banned(message: types.Message):
    await message.answer("‚õî –¢–∏ –∑–∞–±–∞–Ω–µ–Ω–∏–π —É —Ü—å–æ–º—É –±–æ—Ç—ñ!")


# ---------------------------
# –ö–æ–º–∞–Ω–¥–∏
# ---------------------------
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üìö –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è")
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! üëã\n–©–æ —Ç–æ–±—ñ —Ç—Ä–µ–±–∞?", reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == "üìö –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è")
async def show_homework(message: types.Message):
    await message.answer(f"üìå –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è:\n\n{homework_text}")


@dp.message_handler(commands=["setdz"])
async def set_homework(message: types.Message):
    global homework_text
    if message.from_user.id in ADMINS:
        args = message.get_args()
        if args:
            homework_text = args
            await message.answer("‚úÖ –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ!")
        else:
            await message.answer("‚ö†Ô∏è –ù–∞–ø–∏—à–∏ —Ç–∞–∫: /setdz –¢–µ–∫—Å—Ç_–∑–∞–≤–¥–∞–Ω–Ω—è")
    else:
        await message.answer("‚õî –£ —Ç–µ–±–µ –Ω–µ–º–∞ –ø—Ä–∞–≤ –º—ñ–Ω—è—Ç–∏ –î–ó!")


@dp.message_handler(commands=["ban"])
async def ban_user(message: types.Message):
    if message.from_user.id not in ADMINS:
        return await message.answer("‚õî –£ —Ç–µ–±–µ –Ω–µ–º–∞ –ø—Ä–∞–≤!")

    args = message.get_args()
    if not args.isdigit():
        return await message.answer("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ç–∞–∫: /ban userid")

    user_id = int(args)
    banned_users.add(user_id)
    await message.answer(f"‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} –∑–∞–±–∞–Ω–µ–Ω–∏–π.")


@dp.message_handler(commands=["unban"])
async def unban_user(message: types.Message):
    if message.from_user.id not in ADMINS:
        return await message.answer("‚õî –£ —Ç–µ–±–µ –Ω–µ–º–∞ –ø—Ä–∞–≤!")

    args = message.get_args()
    if not args.isdigit():
        return await message.answer("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ç–∞–∫: /unban userid")

    user_id = int(args)
    if user_id in banned_users:
        banned_users.remove(user_id)
        await message.answer(f"‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} —Ä–æ–∑–±–∞–Ω–µ–Ω–∏–π.")
    else:
        await message.answer("‚ÑπÔ∏è –¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ —Ç–∞–∫ –Ω–µ –∑–∞–±–∞–Ω–µ–Ω–∏–π.")


# ---------------------------
# Webhook —Ö–µ–Ω–¥–ª–µ—Ä–∏
# ---------------------------
async def on_startup(dp):
    # —Å—Ç–∞–≤–∏–º–æ webhook
    await bot.set_webhook(WEBHOOK_URL)

async def on_shutdown(dp):
    # –ø—Ä–∏–±–∏—Ä–∞—î–º–æ webhook
    await bot.delete_webhook()


# ---------------------------
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ webhook
# ---------------------------
if __name__ == "__main__":
    start_webhook(
        dispatcher=dp,
        webhook_path=WEBHOOK_PATH,
        on_startup=on_startup,
        on_shutdown=on_shutdown,
        skip_updates=True,
        host=WEBAPP_HOST,
        port=WEBAPP_PORT,
    )
